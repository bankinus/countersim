COUNTERMACHINEPROGRAM	:=	[PREPROCESSORCOMMANDS]{MINSKYPROG, URMPROG}

PREPROCESSORCOMMAND	:= # {SETMACHINEFLAG,SETREGISTER} NEWLINE
SETMACHINEFLAG	:=	machine(MACHINE)
MACHINE	:= {minsky, urm, LRMMACHINE}
LRMMACHINE := lrm L
SETREGISTER	:= setreg(N,M)

MINSKYPROG := [MINSKYSUB* main]([LABEL :] MINSKYINSTRUCTION NEWLINE)*
MINSKYSUB := def SUBROUTINENAME REGISTERNAME* \[EXITNAME*\] NEWLINE ([LABEL :] MINSKYINSTRUCTION NEWLINE)*
MINSKYINSTRUCTION := {MADD, MSUB, MSUBROUTINECALL}
MADD := add r I
MSUB := sub r I J
MSUBROUTINECALL := call SUBROUTINENAME REGISTERNAME* \[EXITNAME*\]
r := {0,1}
I, J := TARGET_INSTRUCTION

URMPROG := [URMSUB*]([LABEL :] URMINSTRUCTION NEWLINE)*
URMSUB := def SUBROUTINENAME REGISTERNAME* \[EXITNAME*\] NEWLINE ([LABEL :] URMINSTRUCTION NEWLINE)*
URMINSTRUCTION := {INC, DEC, CLEAR, COPY, JUMP, JIZ, SUBROUTINECALL}
INC := p N
DEC := d N
CLEAR := o N
COPY := c N M
JUMP := j TARGET_INSTRUCTION
JIZ := j N TARGET_INSTRUCTION
SUBROUTINECALL := call SUBROUTINENAME REGISTERNAME* \[EXITNAME*\]

TARGET_INSTRUCTION := {K, LABEL}
LABEL := {a,..,Z}{a,..,Z,0,..,9,_}*
SUBROUTINENAME := {a,..,Z}{a,..,Z,0,..,9,_}*
REGISTERNAME := {a,..,Z}{a,..,Z,0,..,9,_}*
EXITNAME := {a,..,Z}{a,..,Z,0,..,9,_}*
K, L, N, M are natural numbers
