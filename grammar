countermachineprogram	:=	{minskyprogram, urmprogram}

minskyprogram := minskytype [configcommand*] [minskysubroutine* 'main' NEWLINE]([label ':'] minskyinstruction NEWLINE)*
minskytype := '#' 'machine' 'minsky' NEWLINE
minskysubroutine := 'def' subroutinename registername* '['exitname*']' NEWLINE ([label ':'] minskyinstruction NEWLINE)*
minskyinstruction := {madd, msub, subroutinecall}
madd := 'add' target_register [target_instruction]
msub := 'sub' target_register [target_instruction] target_instruction

urmprogram := {urmtype, lrmtype} [configcommand*] [urmsubroutine*]([label ':'] urminstruction NEWLINE)*
urmtype := '#' 'machine' 'urm' NEWLINE
lrmtype := '#' 'machine' 'lrm' INTEGER NEWLINE
urmsubroutine := 'def' subroutinename registername* '['exitname*']' NEWLINE ([label ':'] urminstruction NEWLINE)*
urminstruction := {inc, dec, clear, copy, jump, jiz, subroutinecall}
inc	:= 'p' target_register
dec	:= 'd' target_register
clear	:= 'o' target_register
copy	:= 'c' target_register target_register
jump	:= 'j' target_instruction
jiz	:= 'j' target_register target_instruction

subroutinecall := 'call' subroutinename target_register* '['target_instruction*']'
configcommand	:= '#' {setregister} NEWLINE
setregister	:= 'set'INTEGER INTEGER

target_instruction := {INTEGER, NAME, 'exit0'}
target_register := {INTEGER, NAME}
label := NAME
subroutinename := NAME
registername := NAME
exitname := NAME

