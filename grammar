COUNTERMACHINEPROGRAM	:=	[PREPROCESSORCOMMANDS]{MINSKYPROG, URMPROG}

PREPROCESSORCOMMAND	:= <#> {SETMACHINEFLAG,SETREGISTER} <newline>
SETMACHINEFLAG	:=	<machine>(MACHINE)
MACHINE	:= {<minsky>, <urm>, LRMMACHINE}
LRMMACHINE := <lrm> <integer>
SETREGISTER	:= <set>(<integer>, <integer>)

MINSKYPROG := [MINSKYSUB* <main> <newline>]([LABEL :] MINSKYINSTRUCTION <newline>)*
MINSKYSUB := <def> SUBROUTINENAME REGISTERNAME* \[EXITNAME*\] <newline> ([LABEL :] MINSKYINSTRUCTION <newline>)*
MINSKYINSTRUCTION := {MADD, MSUB, MSUBROUTINECALL}
MADD := <add> TARGET_REGISTER [TARGET_INSTRUCTION]
MSUB := <sub> TARGET_REGISTER [TARGET_INSTRUCTION] TARGET_INSTRUCTION
MSUBROUTINECALL := <call> SUBROUTINENAME REGISTERNAME* \[EXITNAME*\]

URMPROG := [URMSUB*]([LABEL :] URMINSTRUCTION <newline>)*
URMSUB := <def> SUBROUTINENAME REGISTERNAME* \[EXITNAME*\] <newline> ([LABEL :] URMINSTRUCTION <newline>)*
URMINSTRUCTION := {INC, DEC, CLEAR, COPY, JUMP, JIZ, SUBROUTINECALL}
INC	:= <p> TARGET_REGISTER
DEC	:= <d> TARGET_REGISTER
CLEAR	:= <o> TARGET_REGISTER
COPY	:= <c> TARGET_REGISTER TARGET_REGISTER
JUMP	:= <j> TARGET_INSTRUCTION
JIZ	:= <j> TARGET_REGISTER TARGET_INSTRUCTION
SUBROUTINECALL := <call> SUBROUTINENAME REGISTERNAME* \[EXITNAME*\]

TARGET_INSTRUCTION := {<integer>, <identifier>, <exit0>}
TARGET_REGISTER := {<identifier>, <integer>}
LABEL := <identifier>
SUBROUTINENAME := <identifier>
REGISTERNAME := <identifier>
EXITNAME := <identifier>

